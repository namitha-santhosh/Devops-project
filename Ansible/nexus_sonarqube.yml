- name: Install Nexus, and SonarQube
  hosts: nexus_sonarqube
  become: yes
  tasks:
    # Common prerequisites
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install common dependencies
      apt:
        name:
          - openjdk-17-jdk
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - unzip
          - python3-pip
        state: present
        # SonarQube Installation
    - name: Set sysctl file for SonarQube
      sysctl:
        name: vm.max_map_count
        value: '262144'
        state: present
        reload: yes

    - name: Set file descriptor limits for SonarQube
      lineinfile:
        path: /etc/security/limits.conf
        line: "{{ item }}"
        state: present
      loop:
        - "sonarqube   -   nofile   65536"
        - "sonarqube   -   nproc    4096"

    - name: Create SonarQube user
      user:
        name: sonarqube
        shell: /bin/bash
        home: /opt/sonarqube
        createhome: no

    - name: Download SonarQube
      get_url:
        url: https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-9.9.0.65466.zip
        dest: /tmp/sonarqube.zip
        mode: '0644'

    - name: Create SonarQube directory
      file:
        path: /opt/sonarqube
        state: directory
        owner: sonarqube
        group: sonarqube
        mode: '0755'

    # Fixed extraction step for SonarQube
    - name: Extract SonarQube
      unarchive:
        src: /tmp/sonarqube.zip
        dest: /opt/
        remote_src: yes
        creates: /opt/sonarqube-9.9.0.65466

    - name: Move SonarQube to the correct location
      shell: "cp -R /opt/sonarqube-9.9.0.65466/* /opt/sonarqube/ && rm -rf /opt/sonarqube-9.9.0.65466"
      args:
        creates: /opt/sonarqube/bin
        
    - name: Set ownership of SonarQube directory
      file:
        path: /opt/sonarqube
        owner: sonarqube
        group: sonarqube
        recurse: yes

    - name: Create SonarQube service file
      copy:
        dest: /etc/systemd/system/sonarqube.service
        content: |
          [Unit]
          Description=SonarQube service
          After=network.target

          [Service]
          Type=forking
          ExecStart=/opt/sonarqube/bin/linux-x86-64/sonar.sh start
          ExecStop=/opt/sonarqube/bin/linux-x86-64/sonar.sh stop
          User=sonarqube
          Group=sonarqube
          Restart=always
          LimitNOFILE=65536
          LimitNPROC=4096

          [Install]
          WantedBy=multi-user.target
        mode: '0644'

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Start and enable SonarQube service
      systemd:
        name: sonarqube
        state: started
        enabled: yes

    # Nexus Installation
    - name: Create Nexus user
      user:
        name: nexus
        shell: /bin/bash
        home: /opt/nexus
        createhome: no

    - name: Download Nexus
      get_url:
        url: https://download.sonatype.com/nexus/3/nexus-unix-x86-64-3.79.0-09.tar.gz
        dest: /tmp/nexus.tar.gz
        mode: '0644'

    - name: Create Nexus directory
      file:
        path: /opt/nexus
        state: directory
        owner: nexus
        group: nexus
        mode: '0755'

    - name: Extract Nexus
      unarchive:
        src: /tmp/nexus.tar.gz
        dest: /opt/nexus
        remote_src: yes
        extra_opts: [--strip-components=1]
        owner: nexus
        group: nexus
        creates: /opt/nexus/bin/nexus

    - name: Create Nexus data directory
      file:
        path: /opt/sonatype-work
        state: directory
        owner: nexus
        group: nexus
        mode: '0755'

    - name: Set ownership of Nexus directories
      file:
        path: "{{ item }}"
        owner: nexus
        group: nexus
        recurse: "{{ 'yes' if (item != '/opt/nexus') else 'no' }}"
      loop:
      - /opt/nexus
      - /opt/sonatype-work

    - name: Set permissions for Nexus directories
      file:
        path: "{{ item }}"
        mode: '770'
      loop:
      - /opt/nexus
      - /opt/sonatype-work

    - name: Fix ownership of Nexus work directories
      file:
        path: "/opt/nexus-3.79.0-09/sonatype-work"
        owner: nexus
        group: nexus
        mode: "0755"
        recurse: yes

    - name: Configure Nexus to run as nexus user
      copy:
        dest: /opt/nexus/bin/nexus.rc
        content: 'run_as_user="nexus"'
        owner: nexus
        group: nexus
        mode: '0644'

    - name: Create Nexus service file
      copy:
        dest: /etc/systemd/system/nexus.service
        content: |
          [Unit]
          Description=Nexus service
          After=network.target

          [Service]
          Type=forking
          ExecStart=/bin/bash /opt/nexus/bin/nexus start
          ExecStop=/bin/bash /opt/nexus/bin/nexus stop
          User=nexus
          Group=nexus
          Restart=on-abort

          [Install]
          WantedBy=multi-user.target
        mode: '0644'

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Start and enable Nexus service
      systemd:
        name: nexus
        state: started
        enabled: yes

    # Final setup and verification

    - name: Wait for SonarQube to start
      uri:
        url: http://{{ ansible_host }}:9000
        status_code: 200
      register: result
      until: result.status == 200
      retries: 60
      delay: 5
      ignore_errors: yes

    - name: Wait for Nexus to start
      uri:
        url: http://{{ ansible_host }}:8081
        status_code: 200
      register: result
      until: result.status == 200
      retries: 60
      delay: 5
      ignore_errors: yes